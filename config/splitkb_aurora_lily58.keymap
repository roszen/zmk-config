/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>


/ {
  macros {
    ZMK_MACRO(CTRL_X,
      wait-ms = <0>;
      tap-ms = <0>;
      bindings = <&macro_press &kp CTRL>, <&macro_tap &kp X>, <&macro_release &kp CTRL>;
    )   
    ZMK_MACRO(CTRL_V,
      wait-ms = <0>;
      tap-ms = <0>;
      bindings = <&macro_press &kp CTRL>, <&macro_tap &kp V>, <&macro_release &kp CTRL>;
    )   
    ZMK_MACRO(HI_LI,
      wait-ms = <0>;
      tap-ms = <0>;
      bindings = <&macro_tap &kp HOME>, <&macro_press &kp LSHFT>, <&macro_tap &kp END>, <&macro_release &kp LSHFT>;
    )   
  };
};


/ {
    behaviors {
        bspdel: backspace_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DEL";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp DEL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};


/ {
  keymap {
    compatible = "zmk,keymap";

    /* ---------------------------------------------------------------------------------------------
    *  | ESC  |  1  |  2  |  3  |  4  |  5  |                 |  6  |  7  |  8  |  9  |  0  |  =   |
    *  | TAB  |  Q  |  W  |  E  |  R  |  T  |                 |  Y  |  U  |  I  |  O  |  P  |  -   |
    *  | CTRL |  A  |  S  |  D  |  F  |  G  |                 |  H  |  J  |  K  |  L  |  ;  |  '   |
    *  | SHFT |  Z  |  X  |  C  |  V  |  B  |  "["  |  |  "]" |  N  |  M  |  ,  |  .  |  /  | SHFT |
    */                    | GUI | LWR | ALT | SPACE |  | BSPC | RET | RSE |  `  |

    default_layer {
      bindings = <
        &kp ESC   &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                       &kp N6  &kp N7 &kp N8    &kp N9    &kp N0   &kp EQUAL
        &kp TAB   &kp Q  &kp W  &kp E    &kp R    &kp T                        &kp Y   &kp U  &kp I     &kp O     &kp P    &kp MINUS
        &kp LCTRL &kp A  &kp S  &kp D    &kp F    &kp G                        &kp H   &kp J  &kp K     &kp L     &kp SEMI &kp SQT
        &kp LSHFT &kp Z  &kp X  &kp C    &kp V    &kp B  &kp LBKT   &kp RBKT   &kp N   &kp M  &kp COMMA &kp DOT   &kp FSLH &kp RSHFT
                                &kp LGUI &kp mo 1 &LALT  &kp SPACE  &kp bspdel &kp RET &mo 1  &kp GRAVE
			>;
		};

    lower_layer {
      bindings = <
        &kp F12      &kp F1       &kp F2       &kp F3       &kp F4       &kp F5                &kp F6   &kp F7   &kp F8  &kp F9    &kp F10 &kp F11
        &trans       &trans       &trans       &trans       &trans       &trans                &trans   &trans   &CTRL_V &trans    &trans  &trans
        &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 5 &trans                &kp LEFT &kp DOWN &kp UP  &kp RIGHT &HI_LI  &trans
        &bt BT_CLR   &trans       &trans       &trans       &trans       &trans &trans  &trans &kp HOME &trans   &CTRL_X &kp END   &trans  &trans
                                               &trans       &trans       &trans &trans  &trans &trans &trans &trans 
			>;
		};

    /* raise_layer {
    *    bindings = <
    *      &trans &trans &trans &trans &trans &trans                &trans &trans &trans &trans &trans &trans 
    *      &trans &trans &trans &trans &trans &trans                &trans &trans &trans &trans &trans &trans 
    *      &trans &trans &trans &trans &trans &trans                &trans &trans &trans &trans &trans &trans 
    *      &trans &trans &trans &trans &trans &trans &trans  &trans &trans &trans &trans &trans &trans &trans 
    *                           &trans &trans &trans &trans  &trans &trans &trans &trans 
		*	 >;
    */
		};

	};
};
